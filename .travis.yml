
# https://travis-ci.com/clearasmudd/travis-kitchen-windows-test/builds/146767412
os: windows
language: shell
# rvm:
#  - 2.6.5

services: docker
sudo: true
env:
  global:
    - machine_user=vagrant
    - machine_pass=vagrant
    - machine_port=22
    # - KITCHEN_YAML=.kitchen.travis.yml
    - KITCHEN_LOCAL_YAML=.kitchen.proxy.yml
    - CHEF_LICENSE=accept

# # blocklist
# branches:
#   except:
#   - legacy
#   - experimental

# safelist
branches:
  only:
  - master
  - stable

# install:
#   - choco install vim
install:
  - powershell -NoProfile -NoLogo -NonInteractive -Command \$PSVersionTable
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'secedit /export /cfg $env:temp/export.cfg'
  - powershell -NoProfile -NoLogo -NonInteractive -Command '((get-content $env:temp/export.cfg) -replace ("PasswordComplexity = 1", "PasswordComplexity = 0")) | Out-File $env:temp/export.cfg'
  - powershell -NoProfile -NoLogo -NonInteractive -Command '((get-content $env:temp/export.cfg) -replace ("MinimumPasswordLength = 8", "MinimumPasswordLength = 0")) | Out-File $env:temp/export.cfg'
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'secedit /configure /db $env:windir/security/new.sdb /cfg $env:temp/export.cfg /areas SECURITYPOLICY'
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'net user /add $env:machine_user $env:machine_pass'
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'net localgroup administrators $env:machine_user /add'
  - powershell -NoProfile -NoLogo -NonInteractive -Command '(& cmd /c); iex (irm https://omnitruck.chef.io/install.ps1); Install-Project -Project chefdk -channel current'
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'c:\opscode\chefdk\bin\chef.bat exec ruby --version'


# before_install:
# - |-
#     case $TRAVIS_OS_NAME in
#       windows)
#         [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
#         choco uninstall -y mingw
#         choco upgrade --no-progress -y msys2
#         export msys2='cmd //C RefreshEnv.cmd '
#         export msys2+='& set MSYS=winsymlinks:nativestrict '
#         export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
#         export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
#         export msys2+=" -msys2 -c "\"\$@"\" --"
#         $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
#         ## Install more MSYS2 packages from https://packages.msys2.org/base here
#         taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
#         export PATH=/C/tools/msys64/mingw64/bin:$PATH
#         export MAKE=mingw32-make  # so that Autotools can find it
#         ;;
#     esac

# before_cache:
# - |-
#     case $TRAVIS_OS_NAME in
#       windows)
#         # https://unix.stackexchange.com/a/137322/107554
#         $msys2 pacman --sync --clean --noconfirm
#         ;;
#     esac

# cache:
#     directories:
#     - $HOME/AppData/Local/Temp/chocolatey
#     - /C/tools/msys64

script:
  - ruby -v
  # # - gem install bundler
  # - bundle install
  # # - bundle exec docker version
  # - bundle exec kitchen --version
  # # - bundle exec rake spec
  # - bundle exec kitchen list
  # - bundle exec kitchen test
  - powershell -NoProfile -NoLogo -NonInteractive -Command 'c:\opscode\chefdk\bin\chef.bat shell-init powershell | iex; cmd /c c:\opscode\chefdk\bin\chef.bat --version'
  - c:\opscode\chefdk\bin\chef.bat exec bundle install
  - c:\opscode\chefdk\bin\chef.bat exec kitchen verify
    # - bundle exec kitchen test -d always

# script:
  # # - taskkill -IM "gpg-agent.exe" -F
  # # - powershell -ExecutionPolicy Bypass -NoLogo -File docker.ps1
  # - export KITCHEN_YAML=.kitchen.docker.yml
  # - ruby -v
  # - gem install bundler
  # - bundle install
  # - bundle exec docker version
  # - bundle exec kitchen --version
  # - bundle exec rake spec
  # - bundle exec kitchen test -d always

# script:
#   - docker version
#   - docker images
#   - docker info
#   # - docker run mcr.microsoft.com/windows/nanoserver:1803 ipconfig
#   - docker run mcr.microsoft.com/windows/servercore:1803 ipconfig